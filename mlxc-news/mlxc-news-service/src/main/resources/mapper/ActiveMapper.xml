<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.jxxy.mlxc.news.mapper.ActiveDAO">
 	<resultMap type="com.jxxy.mlxc.news.api.dto.ActiveDto" id="ActiveMap">
 		<result column="id" jdbcType="INTEGER" property="id"/>
 		<result column="active_name" jdbcType="VARCHAR" property="activeName"/>
 		<result column="intro" jdbcType="VARCHAR" property="intro"/>
 		<result column="place" jdbcType="VARCHAR" property="place"/>
 		<result column="time" jdbcType="TIMESTAMP" property="time"/>
 		<result column="plotter" jdbcType="VARCHAR" property="plotter"/>
 		<result column="decription" jdbcType="VARCHAR" property="decription"/>
 		<result column="create_user_id" jdbcType="INTEGER" property="createUserId"/>
 		<result column="user_name" jdbcType="VARCHAR" property="createUserName"/>
 		<result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
 		<!-- <result column="is_call" jdbcType="INTEGER" property="isCall"/> -->
 	</resultMap>
 	<insert id="insert" parameterType="com.jxxy.mlxc.news.api.model.ActiveDO">
 		<selectKey resultType="Long" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID() AS id
		</selectKey>
		insert into active(active_name,place,time,intro,plotter,decription,create_user_id,is_call)
		values
		(#{activeName},#{place},#{time},#{intro},#{plotter},#{decription},#{createUserId},#{isCall})
 	</insert>
 	<update id="update" parameterType="com.jxxy.mlxc.news.api.model.ActiveDO">
 		update active t set
 		<if test="place!=null">
 			t.place=#{place},
 		</if>
 		<if test="time!=null">
 			t.time=#{time}
 		</if>
 		where t.id=#{id}
 	</update>
	<update id="openMsg">
		update active set is_call=#{openCode} where id=#{activeId}
	</update>
	<delete id="delete" parameterType="Long">
 		delete from active t where t.id=#{id}
 	</delete>
 	<delete id="batchDelete" parameterType="List">
 		delete from active t where t.id in
 		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
 			#{item}
 		</foreach>
 	</delete>
 	<!-- 1.直接根据id查活动，跟新闻绑定 
 	2.批量查询
 	3.根据新闻id，查询出活动-->
 	<select id="select" parameterType="Long" resultMap="ActiveMap">
 		select t.id,t.active_name,t.place,t.time,t.intro,t.plotter,t.decription,
 		t.create_user_id,a.user_name,t.create_time
 		from active t
 		left join users a on t.create_user_id=a.id
 		where t.id=#{id}
 	</select>
 	<select id="find" parameterType="com.jxxy.mlxc.news.api.query.ActiveQuery" resultMap="ActiveMap">
 		select t.id,t.active_name,t.place,t.time,t.intro,t.plotter,t.decription,
 		t.create_user_id,a.user_name,t.create_time
 		from active t
 		left join users a on t.create_user_id=a.id
 		where 1=1
 		<if test="createUserId!=null">
 			AND t.create_user_id=#{createUserId}
 		</if>
 	</select>
 	<select id="selectByNewsId" parameterType="Long" resultMap="ActiveMap">
 		select t.id,t.active_name,t.place,t.time,t.intro,t.plotter,t.decription,
 		t.create_user_id,a.user_name,t.create_time
 		from active t
 		left join users a on t.create_user_id=a.id
 		inner join news b on b.active_id=id
 		where b.id=#{id}
 	</select>
    <select id="selectActiveByTime" resultType="com.jxxy.mlxc.news.api.dto.ActiveUserDto" parameterType="String">
		select t.id,t.active_name as activeName,t.time as beginTime,u.phone,u.user_name as userName
 		from users u
 		left join entry e on e.entry_user_id=u.id
		left join active t on e.active_id=t.id
 		where date_format(t.time,'%Y-%m-%d %H')=#{date}
	</select>
</mapper>