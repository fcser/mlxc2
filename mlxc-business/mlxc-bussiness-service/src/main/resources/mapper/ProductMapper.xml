<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.jxxy.mlxc.business.mapper.ProductDao">
 	<resultMap type="com.jxxy.mlxc.business.api.dto.ProductDto" id="ProductMap">
 		<result column="id" jdbcType="INTEGER" property="id"/>
 		<result column="name" jdbcType="VARCHAR" property="name"/>
 		<result column="decription" jdbcType="VARCHAR" property="decription"/>
 		<result column="stock" jdbcType="INTEGER" property="stock"/>
		<result column="price" jdbcType="DOUBLE" property="nowPrice"/>
 		<result column="old_price" jdbcType="DOUBLE" property="oldPrice"/>
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
		<result column="version" jdbcType="INTEGER" property="version"/>
		<result column="seckill_price" jdbcType="DOUBLE" property="seckillPrice"/>
		<result column="seckill_num" jdbcType="INTEGER" property="seckillNum"/>
		<result column="create_user_id" jdbcType="INTEGER" property="createUserId"/>
		<result column="is_seckill" jdbcType="INTEGER" property="isSeckill"/>
 	</resultMap>
	<sql id="baseProduct">
		id,
		name,
		decription,
		price,
		old_price,
		stock,
		create_time,
		update_time,
		seckill_price,
		seckill_num,
		create_user_id,
		is_seckill
	</sql>
 	<insert id="insert" parameterType="com.jxxy.mlxc.business.api.dto.ProductDto" useGeneratedKeys="true" keyProperty="id">
		insert into product(name,decription,stock,price,discount,create_user_id)
		values (#{name},#{decription},#{stock},#{price},#{discount}.#{createUserId})
	</insert>
	<update id="insertSeckill" parameterType="com.jxxy.mlxc.business.api.dto.GrabSimgleDto">
		update product set seckill_price=#{price},seckill_num=#{count} where id=#{productId}
	</update>

	<update id="update" parameterType="com.jxxy.mlxc.business.api.dto.ProductDto">
		update product
		set
		<!--<trim suffixOverrides=",">-->
			<if test="decription != null and decription != ''">
				decription = #{decription, jdbcType=VARCHAR},
			</if>
			<if test="stock != null">
				stock = #{stock},
			</if>
			<if test="nowPrice != null">
				price=#{nowPrice},
			</if>
			<if test="oldPrice != null">
				old_price=#{oldPrice},
			</if>
			update_time = NOW()
		<!--</trim>-->
		WHERE
		id = #{id}
	</update>

	<delete id="delete" parameterType="Long">
		delete from product where id=#{id}
	</delete>

	<delete id="batchDelete" parameterType="List">
		delete from product where id in
		<foreach collection="ids" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

	<select id="listProduct" parameterType="com.jxxy.mlxc.business.api.query.ProductQuery" resultMap="ProductMap">
		select
		<include refid="baseProduct"/>
		from product
		where 1=1
		<if test="name!=null and name!=''">
			and name like concat('%',#{name},'%')
		</if>
		order by create_time desc
	</select>

	<select id="getProduct" parameterType="Long" resultMap="ProductMap">
		select
		version,
		<include refid="baseProduct"/>
		from product
		where id=#{id}
	</select>

	<update id="decreaseProduct">
		update product set stock=stock-#{count}
		where id=#{id}
	</update>
	<!-- 减少库存,乐观锁-->
	<update id="seckill">
		update product set seckill_num=seckill_num-2,stock=stock-2,version=version+1
		where id=#{id} and version=#{version}
	</update>
	<update id="updateSeckill">
		update product set is_seckill=#{flag}
		where id=#{id}
	</update>
</mapper>